version: "3.8"

networks:
  app-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  broker1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"     # สำหรับ container-to-container
      - "29092:29092"   # สำหรับ host-to-container
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  kafka-init:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-init
    depends_on:
      - broker1
    volumes:
      - ./kafka-init:/kafka-init
    entrypoint: ["/kafka-init/create_topics.sh"]
    networks:
      - app-network


  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "${USER_SERVICE_PORT}:8081"
    env_file:
      - .env
    depends_on:
      - broker1
    networks:
      - app-network

  stock-service:
    build:
      context: ./stock-service
      dockerfile: Dockerfile
    ports:
      - "${STOCK_SERVICE_PORT}:8082"
    env_file:
      - .env
    depends_on:
      - broker1
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "${ORDER_SERVICE_PORT}:8083"
    env_file:
      - .env
    depends_on:
      - broker1
      - kafka-init
    networks:
      - app-network
